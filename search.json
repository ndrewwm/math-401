[
  {
    "objectID": "notes/template.html",
    "href": "notes/template.html",
    "title": "Summary of progress over the previous week",
    "section": "",
    "text": "Summary of progress over the previous week\n\n\nCurrent Questions\n\n\nResources reviewed/cited"
  },
  {
    "objectID": "krr/overview.html",
    "href": "krr/overview.html",
    "title": "Kernel Ridge Regression",
    "section": "",
    "text": "library(tidyverse)\nset.seed(123)\n\nf &lt;- function(x) sin(3*x) + sin(7*x)\nk &lt;- function(x_i, x_j, sigma_f = 0.4, l = 0.4) sigma_f * exp(-(x_i - x_j)^2 / (2 * l^2))\n\nn &lt;- 400\nx &lt;- seq(-5, 5, length.out = n)\nf_x &lt;- f(x) + rnorm(n, mean = 0, sd = 0.4)\n\n\nn &lt;- 100\nind_train &lt;- sample(1:400, n, replace = FALSE)\nx_train &lt;- x[ind_train]\nf_train &lt;- f_x[ind_train]\n\ncompute_covmat &lt;- function(k, x, y) {\n  n_x &lt;- length(x)\n  n_y &lt;- length(y)\n  K &lt;- matrix(0, n_x, n_y)\n  for (i in 1:n_x) {\n    for (j in 1:n_y) {\n      K[i, j] &lt;- k(x[i], y[j])\n    }\n  }\n  return(K)\n}\n\nk_xx &lt;- compute_covmat(k, x_train, x_train)\n\nlambda &lt;- 0.0001\ncoef &lt;- solve(k_xx + n * lambda * diag(n)) %*% f_train\n\nf_hat &lt;- function(x) {\n  map2_dbl(coef, x_train, ~.x * k(x, .y)) |&gt;\n    reduce(`+`)\n}\n\ny_hat &lt;- map_dbl(x, f_hat)\n\ncolors &lt;- c(\"Actual\" = \"blue\", \"Data\" = \"black\", \"Estimate\" = \"orange\")\n\nout &lt;- tibble(x, f = f(x), f_x, y_hat) |&gt;\n  pivot_longer(-x) |&gt;\n  mutate(\n    name = factor(name, levels = c(\"f\", \"f_x\", \"y_hat\"), labels = names(colors))\n  )\n  \nggplot() +\n  geom_point(data = filter(out, name == \"Data\"), aes(x, y = value, color = name), alpha = 0.2) +\n  geom_line(data = filter(out, name == \"Actual\"), aes(x, y = value, color = name)) +\n  geom_line(data = filter(out, name == \"Estimate\"), aes(x, y = value, color = name)) +\n  scale_color_manual(name = \"\", values = colors) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "gaussian_processes/v2.html",
    "href": "gaussian_processes/v2.html",
    "title": "hmm",
    "section": "",
    "text": "Assume our sample space is 400 evenly spaced points between -5 and 5. Let \\(\\mathbf{x}\\) denote the set of \\(N\\)-many points at which we have collected observations, defined as:\n\\[\n\\mathbf{x} = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_N \\end{bmatrix}.\n\\]\nLet \\(\\mathbf{\\epsilon} \\sim \\mathcal{N}(0, \\sigma^2)\\) be an \\(N\\)-dimensional vector. Let \\(\\mathbf{y}\\) denote the values of \\(f\\) observed at each \\(x_i\\), with the addition of noise (\\(\\epsilon_i\\)): \\[\n\\mathbf{y} = f(\\mathbf{x}) + \\mathbf{\\epsilon} \\iff \\begin{bmatrix} y_1 \\\\ y_2 \\\\ \\vdots \\\\ y_N \\end{bmatrix} = \\begin{bmatrix} f(x_1) \\\\ f(x_2) \\\\ \\vdots \\\\ f(x_N) \\end{bmatrix} + \\begin{bmatrix} \\epsilon_1 \\\\ \\epsilon_2 \\\\ \\vdots \\\\ \\epsilon_N \\end{bmatrix}.\n\\]\nTogether, \\((\\mathbf{x}, \\mathbf{y})\\) can be referred to as training data. Let \\((\\mathbf{x_*}, \\mathbf{y_*})\\) denote test data (i.e., points \\(x^*_i\\) at which we want to predict a value of \\(y^*_i\\)). We will use \\(M\\) to denote the size of \\(\\mathbf{x_*}\\) and \\(\\mathbf{y_*}\\).\nWe assume that \\(\\mathbf{y}\\) can be modeled by a Gaussian process, i.e., \\(\\mathbf{y} \\sim \\mathcal{N}(\\mathbf{m}, \\mathbf{\\Sigma})\\). Let \\(m: \\mathbb{R} \\to \\mathbb{R}\\), and the squared exponential kernel \\(k: \\mathbb{R} \\times \\mathbb{R} \\to \\mathbb{R}\\) be defined as \\[\n\\begin{align*}\nm(x) &= 0, \\\\\nk(x, x') &= \\sigma \\cdot exp\\Bigl(-\\frac{1}{2l^2}(x - x')^2\\Bigr)\n\\end{align*}\n\\]\nwith \\(\\sigma\\) and \\(l\\) as hyperparameters.\n\n\nTo-do: elaborate on what \\(\\sigma\\) and \\(l\\) control within \\(k\\).\nThe conditional distribution \\(\\mathbf{y_*} | \\mathbf{y}\\) can be defined as another Gaussian process: \\(\\mathbf{y}_* | \\mathbf{y} \\sim \\mathcal{N}(\\bar{m}, \\bar{\\Sigma})\\) with \\(\\bar{m}\\) and \\(\\bar{\\Sigma}\\) are defined as\n\\[\n\\begin{align*}\n\\bar{m} &= K(\\mathbf{x_*}, \\mathbf{x}) (K(\\mathbf{x}, \\mathbf{x}) + \\sigma^2 \\mathbf{I})^{-1} \\mathbf{y}, \\\\\n\\bar{\\Sigma} &= K(\\mathbf{x_*}, \\mathbf{x_*}) - K(\\mathbf{x_*}, \\mathbf{x})(K(\\mathbf{x}, \\mathbf{x}) + \\sigma^2 \\mathbf{I})^{-1} K(\\mathbf{x}, \\mathbf{x_*}),\n\\end{align*}\n\\]\n\n\nIn Kanagawa et al. (2018), they note that the final term in \\(\\bar{m}\\) should be something like \\((\\mathbf{y} - m_\\mathbf{x})\\) where \\(m_\\mathbf{x} = [m(x_1), \\dots, m(x_N)]^\\top\\). I’ve omitted the subtraction given that \\(m(\\mathbf{x}) = \\mathbf{0}\\).\nwhere\n\\[\n\\begin{align*}\nK(\\mathbf{x_*}, \\mathbf{x}) &= [k(x^*_i, x_j)]_{i,j = 1}^{M,N} \\in \\mathbb{R}^{M \\times N}, \\\\\nK(\\mathbf{x}, \\mathbf{x_*}) &= [k(x_i, x^*_j)]_{i,j = 1}^{N,M} \\in \\mathbb{R}^{N \\times M}, \\\\\nK(\\mathbf{x}, \\mathbf{x}) &= [k(x_i, x_j)]_{i,j = 1}^{N,N} \\in \\mathbb{R}^{N \\times N}, \\text{ and } \\\\\nK(\\mathbf{x_*}, \\mathbf{x_*}) &= [k(x^*_i, x^*_j)]_{i,j}^{M,M} \\in \\mathbb{R}^{M \\times M}.\n\\end{align*}\n\\]\n\n\n\n\n\n\nNon-functional code\n\n\n\nI haven’t been able to get a comparable implementation in Julia to work. The issue appears to be roundoff errors, with some entries of the posterior covariance matrix being very small, but negative.\n\n\nWe’ll now apply these definitions to simulated data. For this simulation, we’ll arbitrarily pick \\(\\sigma = 2\\) and \\(l = 0.4\\) as our hyperparameter values.\n\n\nThe functions \\(m\\) and \\(k\\) are themselves hyperparameters? So, in the case of \\(\\sigma\\) and \\(l\\), are they “sub-hyperparameters”?\n\nusing LinearAlgebra, Distributions, Random, Plots\n\nσ = 0.4;\nl = 0.4;\n\nf(x) = sin(3x) + sin(7x);\n\nx_all = Vector(range(-5, 5, 400));\nx = sort(rand(x_all, 50));\nx_star = sort(setdiff(x_all, x));\n\nN = length(x);\nM = length(x_star);\n\nϵ = rand(Normal(0, σ), N);\nϵ_star = rand(Normal(0, σ), M);\n\ny = f.(x) + ϵ;\ny_star = f.(x_star) + ϵ_star;\n\n\nplot(x_all, f.(x_all))\nscatter!(vcat(x, x_star), vcat(y, y_star))\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaving defined \\((\\mathbf{x}, \\mathbf{y})\\) and \\((\\mathbf{x_*}, \\mathbf{y_*})\\), we can now compute each \\(K\\).\n\nk(x_i, x_j) = σ * exp(-(x_i - x_j)^2 / (2 * l^2));\n\nfunction compute_covmat(k::Function, X::Vector, Y::Vector)::Matrix\n    n_x = length(X);\n    n_y = length(Y);\n    K = zeros(n_x, n_y);\n    for i = 1:n_x\n        for j = 1:n_y\n            K[i, j] = k(X[i], Y[j]);\n        end\n    end\n    return K;\nend;\n\nK = compute_covmat(k, x, x);\nK_star = compute_covmat(k, x_star, x);\nK_star2 = compute_covmat(k, x_star, x_star);\n\n\nm_post = K_star * inv(K + σ^2 * I) * y;\ncov_post = K_star2 - K_star * inv(K + σ^2 * I) * K_star';\n\ndisplay(cov_post)\n\n# cov_post = cov_post - minimum(eigvals(Symmetric(cov_post))) * I;\n\n# rand(MultivariateNormal(m_post, cov_post), 10)\n\n354×354 Matrix{Float64}:\n  0.0996586     0.0975553     0.0949075    …   1.61013e-15   2.68286e-15\n  0.0975553     0.0964432     0.0947564        1.81891e-15   3.03082e-15\n  0.0949075     0.0947564     0.0940141        2.00401e-15   3.33932e-15\n  0.0917387     0.0925057     0.0926789        2.15606e-15   3.59279e-15\n  0.0880802     0.0897105     0.0907583        2.26463e-15   3.77381e-15\n  0.0839701     0.0863984     0.0882687    …   2.3181e-15    3.86305e-15\n  0.0794527     0.0826046     0.0852355        2.30375e-15   3.83929e-15\n  0.0745781     0.0783717     0.0816926        2.20767e-15   3.67936e-15\n  0.0694009     0.0737485     0.0776817        2.01484e-15   3.35822e-15\n  0.0639795     0.0687891     0.0732515        1.70915e-15   2.84903e-15\n  0.0583745     0.0635521     0.0684567    …   1.27348e-15   2.12323e-15\n  0.0526482     0.0580992     0.063357         6.89799e-16   1.15074e-15\n  0.046863      0.0524943     0.0580158       -6.06911e-17  -9.97562e-17\n  ⋮                                        ⋱                \n  6.93202e-15   7.83179e-15   8.62977e-15     -0.0052253    -0.00756016\n  4.27588e-15   4.83103e-15   5.32342e-15     -0.00425865   -0.00678172\n -1.84793e-16  -2.08431e-16  -2.29274e-16     -0.00134423   -0.00410184\n -1.90185e-15  -2.1483e-15   -2.36673e-15  …   0.000618657  -0.00216886\n -3.2494e-15   -3.67073e-15  -4.04423e-15      0.00291822    0.000168859\n -4.844e-15    -5.4723e-15   -6.02936e-15      0.00848553    0.00604008\n -5.09527e-15  -5.75625e-15  -6.34233e-15      0.0152055     0.0133931\n -4.79326e-15  -5.41511e-15  -5.96649e-15      0.0189214     0.0175526\n -4.25678e-15  -4.80906e-15  -5.29876e-15  …   0.0228218     0.0219801\n -5.89063e-16  -6.65583e-16  -7.33466e-16      0.0393022     0.0413097\n  1.61013e-15   1.81891e-15   2.00401e-15      0.047323      0.0510886\n  2.68286e-15   3.03082e-15   3.33932e-15      0.0510886     0.0557794"
  },
  {
    "objectID": "reflections/reflection_1.html",
    "href": "reflections/reflection_1.html",
    "title": "Reflection 1",
    "section": "",
    "text": "A key aspect of my experience at Boise state is that I am a second-degree student. My first B.A. degree was in the field of psychology. After graduating in 2013, I worked as a research technician in various settings and as a data analyst. Coursework and independent research experience from my first degree prepared me for the work I would perform, but I was constantly drawn to the study of mathematics and statistical science. Modern software makes computing and visualizing statistical data quick and often easy to perform. To me, this convenience highlights the importance of understanding the fundamentals beneath a software implementation. I was computing summaries and building/visualizing small statistical models. I wanted to make sure that I wasn’t mishandling these “golems”, as Richard McElreath (McElreath 2018, chap. 1) describes them.\nWhen I began my program at Boise State, I had already completed Calculus I, Calculus II, Calculus III, and an introduction to Linear Algebra. I believe there are two themes visible in my coursework, and will elaborate on them in the following paragraphs. Below is a list of courses I completed during my second degree, with courses as part of the statistics emphasis in italics and courses I want to highlight in bold.\n\n\n\nTerm\nCourse\nTitle\n\n\n\n\n2021 Spring\nMATH 361\nProbability & Statistics I\n\n\n2021 Summer\nMATH 189\nDiscrete Mathematics\n\n\n2021 Fall\nMATH 287\nMathematical Proofs & Methods\n\n\n\nMATH 471\nData Analysis\n\n\n2022 Spring\nMATH 305\nAbstract Algebra/Number Theory\n\n\n\nMATH 314\nFoundations of Analysis\n\n\n2022 Fall\nMATH 333\nDifferential Equations w/ Matrix Theory\n\n\n\nMATH 462\nProbability & Statistics II\n\n\n2023 Spring\nMATH 472\nComputational Statistics\n\n\n2023 Fall\nMATH 365\nIntroduction to Computational Mathematics\n\n\n2024 Spring\nMATH 308\nIntroduction to Algebraic Cryptology\n\n\n2024 Fall\nMATH 403\nLinear Algebra\n\n\n\nMATH 465\nIntroduction to Numerical Methods\n\n\n\nThe first theme is the development of literacy for mathematical writing. I greatly appreciated the first few classes I took that emphasized the examination and writing of mathematical proofs. I remember MATH 287, MATH 305, and MATH 314 being very challenging, but deeply rewarding in terms of strengthening my ability to read and decompose theorems that I’d encounter in other classes. I credit MATH 287 in particular for helping me learn about the structure of proofs, and the kinds of logical arguments used to integrate and extend mathematical facts/topics.\nThe second theme is an appreciation for the “species” of mathematical objects and spaces that one might encounter. I think MATH-314 and MATH-403 are my favorite examples of this, but I should also mention MATH-305 for similar reasons. MATH-314 was interesting in that it cracks open several things we almost take for granted, such as calculus and the real number line. Calculus is incredibly far-reaching in its impact on technology and science, but we don’t really get a sense for the mathematical results that provide its foundation until studying analysis. Similarly, linear algebra is deeply influential for modern computing, but I’ve grown to appreciate how useful it is for translating mathematical concepts into multiple dimensions. Being aware of the space(s) or set(s) of numbers you’re reasoning about is crucial to framing the problems you’re working on.\nUnifying these two themes is an interest in computation and statistical inference. This stems from my motivations to pursue the degree, but my learning in MATH-462 and MATH-472 would have been much more shallow if I hadn’t taken MATH-287 and MATH-314. Most importantly, courses like MATH-365, MATH-465, and MATH-472 emphasized the implementation of mathematical methods via programming and simulation. I’ve found that defining and conducting a simulation and implementing algorithms to be the best way I learn when exploring a mathematical property or topics within a course. Looking back, I think the absence of an application area was a reason I struggled with MATH-189 and MATH-305.\n\n\n\n\nReferences\n\nMcElreath, Richard. 2018. Statistical Rethinking: A Bayesian Course with Examples in r and Stan. Chapman; Hall/CRC."
  },
  {
    "objectID": "reflections/index.html",
    "href": "reflections/index.html",
    "title": "Reflections",
    "section": "",
    "text": "Here are links to the reflection assignments I completed during MATH 401.\nReflection 1"
  },
  {
    "objectID": "gaussian_processes/overview.html",
    "href": "gaussian_processes/overview.html",
    "title": "Overview of Gaussian Processes",
    "section": "",
    "text": "This page relies heavily on Kanagawa, Hennig, Sejdinovic, and Sriperumbudur (2018).\n\nDefinition 2.2: Gaussian Process\nLet \\(\\chi\\) be a nonempty set, \\(k: \\chi \\times \\chi \\to \\mathbb{R}\\) a positive definite kernel and \\(m: \\chi \\to \\mathbb{R}\\) be any real-valued function. Then a random function \\(f: \\chi \\to \\mathbb{R}\\) is said to be a Gaussian process (GP) with mean function \\(m\\) and covariance kernel \\(k\\), denoted by \\(\\mathcal{GP}(m, k)\\), if the following holds: For any finite set \\(X = (x_1, \\dots, x_n) \\subset \\chi\\) of any size \\(n \\in \\mathbb{N}\\), the random vector\n\\[\nf_X = (f(x_1), \\dots, f(x_n))^\\top \\in \\mathbb{R}^n\n\\]\nfollows the multivariate normal distribution \\(\\mathcal{N}(m_X, k_{XX})\\) with covariance matrix \\(k_{XX} = [k(x_i, x_j)]_{i, j = 1}^{n} \\in \\mathbb{R}^{n \\times n}\\) and mean vector \\(m_X = (m(x_1), \\dots, m(x_n))^\\top\\).\n\n\nGaussian Process Regression\n\nalso called kriging or Wiener-Kolmogorov prediction\n\nRegression is the task of estimating of an unknown function \\(f\\) based on a provided set of training data, \\((X, Y)\\), where \\(X = (x_1, \\dots, x_n)^\\top\\) and \\(Y = (y_1, \\dots, y_n)^\\top\\) are random vectors (\\(x_i\\) and \\(y_i\\) are realizations, collected by the experimenter). Regression assumes the presence of noise denoted by \\(\\epsilon\\), which completes the additive model:\n\\[\ny_i = f(x_i) + \\epsilon.\n\\]\nIt’s typically assumed that \\(\\epsilon\\) is normally distributed with mean 0, i.e., \\(\\epsilon \\sim \\mathcal{N}(0, \\sigma)\\).\nGaussian process regression is a Bayesian approach that uses a GP as a prior distribution for \\(f\\).\n\n\n\n\n\n\n\n\n\nPrior\nPosterior\n\n\n\n\nHyperparameter: kernel\n\\(k\\)\n\\(\\bar{k}\\)\n\n\nHyperparameter: mean function\n\\(m\\)\n\\(\\bar{m}\\)\n\n\nDistribution\n\\(\\mathcal{GP}(m, k)\\)\n\\(\\mathcal{GP}(\\bar{m}, \\bar{k})\\)\n\n\n\nThe authors show that the posterior distribution \\(f|Y \\sim \\mathcal{GP}(\\bar{m}, \\bar{k})\\) where \\(\\bar{m} : \\chi \\to \\mathbb{R}\\) and \\(\\bar{k}: \\chi \\times \\chi \\to \\mathbb{R}\\) is given by\n\\[\n\\begin{align*}\n\\bar{m}(x) &= m(x) + k_{xX}(k_{XX} + \\sigma^2I_n)^{-1}(Y - m_X),\\ x \\in \\chi, \\\\\n\\bar{k}(x, x') &= k(x, x') - k_{xX}(k_{XX} + \\sigma^2I_n)^{-1}k_{Xx'},\\ x,x' \\in \\chi,\n\\end{align*}\n\\]\nwhere \\(k_{Xx} = k_{xX}^\\top = (k(x_1, x), \\dots, k(x_n, x))^\\top\\).\nThis is interesting, because these are closed-form expressions, and notably, we haven’t made use of Bayes’s Rule. Assuming the kernel and mean functions aren’t expensive or difficult to evaluate, the computation is just linear algebra.\n\n\nDrawing from a Gaussian Process\n\nlibrary(tidyverse)\nset.seed(123)\n\nf &lt;- function(x) sin(3*x) + sin(7*x)\nk &lt;- function(x_i, x_j, sigma_f = 0.4, l = 0.4) sigma_f * exp(-(x_i - x_j)^2 / (2 * l^2))\n\nn &lt;- 400\nx &lt;- seq(-5, 5, length.out = n)\nf_x &lt;- f(x)\n\nsigma &lt;- 0.4\nepsilon &lt;- rnorm(n, 0, sigma)\ny &lt;- f_x + epsilon\n\nd &lt;- tibble(x, f_x, y)\nggplot(d, aes(x = x)) +\n  geom_line(aes(y = f_x), color = \"blue\") +\n  geom_point(aes(y = y))\n\n\n\n\n\n\n\n\nHere we’ll compute the posterior distribution over the whole range \\([-5, 5]\\), using \\(n = 100\\) training data points.\n\nn &lt;- 100\nind_train &lt;- sample(1:400, n, replace = FALSE)\nx_train &lt;- x[ind_train]\ny_train &lt;- y[ind_train]\n\ncompute_covmat &lt;- function(k, x, y) {\n  n_x &lt;- length(x)\n  n_y &lt;- length(y)\n  K &lt;- matrix(0, n_x, n_y)\n  for (i in 1:n_x) {\n    for (j in 1:n_y) {\n      K[i, j] &lt;- k(x[i], y[j])\n    }\n  }\n  return(K)\n}\n\nk_XX &lt;- compute_covmat(k, x_train, x_train)\nk_xx &lt;- compute_covmat(k, x, x)\nk_xX &lt;- compute_covmat(k, x, x_train)\n\nm_post &lt;- k_xX %*% solve(k_XX + sigma^2 * diag(n)) %*% y_train\ncov_post &lt;- k_xx - k_xX %*% solve(k_XX + sigma^2 * diag(n)) %*% t(k_xX)\n\nHere m_post represents the mean vector of the posterior distibution, and cov_post represents the posterior’s covariance matrix.\n\n\nIn Kanagawa et al. (2018), they note that the final term in the posterior mean function \\(\\bar{m}\\) should be something like \\((\\mathbf{y} - m_\\mathbf{x})\\) where \\(m_\\mathbf{x} = [m(x_1), \\dots, m(x_N)]^\\top\\). I’ve omitted the subtraction given that \\(m(\\mathbf{x}) = \\mathbf{0}\\).\nBelow in blue is the actual function \\(f\\), with 50 draws (grey) from the posterior distribution. The posterior mean of these draws is plotted as the orange line.\n\nf_post &lt;- MASS::mvrnorm(50, m_post, cov_post)\n\ndraws &lt;- as_tibble(t(f_post)) |&gt;\n  mutate(x = x, y = f(x)) |&gt;\n  pivot_longer(V1:V50)\n\npost_mean &lt;- draws |&gt;\n  group_by(x) |&gt;\n  summarize(post_mean = mean(value))\n\ndraws |&gt;\n  ggplot(aes(x = x)) +\n  geom_line(aes(y = value, group = name), alpha = 0.1) +\n  geom_line(aes(y = y), color = \"blue\", lty = \"dashed\") +\n  geom_line(data = post_mean, aes(x = x, y = post_mean), color = \"orange\")\n\n\n\n\n\n\n\n\n\n\nCitations (WIP)\n\nhttps://juanitorduz.github.io/gaussian_process_reg/\nhttps://www.cs.toronto.edu/~duvenaud/cookbook/\nhttps://gregorygundersen.com/blog/2019/06/27/gp-regression/\nhttps://gregorygundersen.com/blog/2019/09/12/practical-gp-regression/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MATH 401",
    "section": "",
    "text": "Working on an overview of Gaussian processes\n\nI have a more formal writeup (in the sense of notation) of GPR here\n\nWorking on an overview of KRR\n\ntodos:\n\nupdate citations\n\n\n\n\n\n\n\nReviewed sections 1-3. Covered the algorithm that auths present on page N.\nGoal: try to have some workable code to demonstrate KRR and GPR on simulated data. Let’s understand what the methods are producing.\n\n\n\n\n\nDiscussion, admin work\nDecided to cover first 3 sections of __ paper\nMentioned __ textbook."
  },
  {
    "objectID": "index.html#upcoming",
    "href": "index.html#upcoming",
    "title": "MATH 401",
    "section": "",
    "text": "Working on an overview of Gaussian processes\n\nI have a more formal writeup (in the sense of notation) of GPR here\n\nWorking on an overview of KRR\n\ntodos:\n\nupdate citations"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "MATH 401",
    "section": "",
    "text": "Reviewed sections 1-3. Covered the algorithm that auths present on page N.\nGoal: try to have some workable code to demonstrate KRR and GPR on simulated data. Let’s understand what the methods are producing."
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "MATH 401",
    "section": "",
    "text": "Discussion, admin work\nDecided to cover first 3 sections of __ paper\nMentioned __ textbook."
  }
]